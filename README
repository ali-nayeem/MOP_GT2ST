# Evolutionary Multi-objective Optimization for Phylogenomic Analyses

This is a C++ project built on top of MO-Phylogenetics(https://github.com/cristianzambrano/MO-Phylogenetics) 
for inferring species tree from a given set of gene trees.

=======================================================================================
Requirements 
=======================================================================================

MO-Phylogenetics has been developed in Unix machines (Ubuntu and MacOS X) as well as in
Windows (MinGW) using the G++ (4.4.7) compiler. The make utility has been used to compile the
software package.

MO-Phylogenetics is based on jMetalCpp and requires install two frameworks:

1) Bio++: a set of C++ libraries for Bioinformatics, including sequence analysis, phylogenetics, molecular evolution and population genetics. Home Page:  http://biopp.univ-montp2.fr/

2) PLL - Phylogenetic Likelihood Library: a highly optimized, parallized software library to ease the development of new software tools dealing with phylogenetic inference. 
Home Page: Phylogenetic Likelihood Library http://www.libpll.org/

Bio++ also requeries the CMake utility and Pll requeries Autoreconf utility.

=======================================================================================

=======================================================================================
Installation
=======================================================================================

Copy the compressed file to the location where you want to install MO-Phylogenetics and
unzip it.

Then, run the install.sh with the following command:
  %sh install.sh

This install all the libraries needed: Bio++ (Bpp-Core, Bpp-Seq and Bpp-Phyl) and Pll.
Add the path of the new libraries installed in your .bashrc file

For Bio++:

   export CPATH=$CPATH:MOPhylogenetics_path/lib/Bpp/include    
   export LIBRARY_PATH=$LIBRARY_PATH:MOPhylogenetics_path/lib/Bpp/lib   
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:MOPhylogenetics_path/lib/Bpp/lib  

For Pll:

   export CPATH=$CPATH:MOPhylogenetics_path/lib/Pll/src/include    
   export LIBRARY_PATH=$LIBRARY_PATH:MOPhylogenetics_path/lib/Pll/src/lib   
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:MOPhylogenetics_path/lib/Pll/src/lib  

=======================================================================================


=======================================================================================
Structure 
=======================================================================================

* root: 
** lib
	*** Bpp: Source code of the Bio++ libraries: Bpp-Core, Bpp-Seq and Bpp-Phyl
	*** Pll: Source code of Phylogenetic Likelihood Library
	libjmetal.a: jMetalCpp library

** src: Source Code of MO-Phylogenetics based in the jMetalCpp framework. Some changes were added to adjut to the Phylogenetic problem.
	
** bin: Main Binary of the software

** data
	*** sequences: Sequences file
	*** model: Partition Model file used by Pll 
	*** inputusertrees: Input Phylogenetic Trees used as repository to generate initial population

** parameters: Parameters file wich contains all the parameters needed to customize the software.

	
=======================================================================================
Parameters 
=======================================================================================

Parameters of the Metaheuristic:

experimentid	 = Experiment ID, the results file are renamed using this ID
DATAPATH   	 = data folder name 

algorithm	 = Name, now available: NSGAII,SMSEMOA,MOEAD,PAES, NSGAIII
populationsize 	 = Population Size o
maxevaluations 	 = Number of the evaluations 

offset 		= SMSEMOA parameter only

datadirectory	= MOAED/D parameter only

bisections	= Number of bisections,  PAES parameter only
archivesize	= Size of the archive,  PAES parameter only

intervalupdateparameters = Interval of evaluations to Optimize the Branch-length and parameters of 				   the evolutionary model  

printtrace 		= Prints trace of the time elapsed and score value performed during 				  optimizing strategies   
printbestscores 	= Prints best scores found during the algorithm execution 

Genetic Operators

selection.method	= binarytournament and randomselection (for SMSEMOA) are Available.

crossover.method 	= Only the PDG (Prune-Delete-Graph) recombination operator is available.
crossover.probability   = Probability to execute.
crossover.offspringsize = Number of descendents

mutation.method 		= NNI, SPR and TRB Topological mutations are available 
mutation.probability 		= Probability to execute
mutation.distributionindex 	= Distribution Index
